APP_NAME := xconfig
MAIN_FILE := main.go
MODULE := xconfig
TAG ?= latest
PLAYBOOK ?= examples/deploy.yaml
OS := $(shell uname -s)
BINARY_PATH := /usr/local/bin/$(APP_NAME)

ifeq ($(OS),Darwin)
BINARY_PATH := /opt/homebrew/bin/$(APP_NAME)
endif

ifeq ($(OS),Windows_NT)
BINARY_PATH := $(APP_NAME).exe
endif

.PHONY: all build run clean init ansible playbook vault cmdb plugin help install

all: build

init:
	@test -f go.mod || go mod init $(MODULE)
	GOPROXY=https://goproxy.cn,direct go get github.com/spf13/cobra@latest
	GOPROXY=https://goproxy.cn,direct go get golang.org/x/crypto/ssh
	GOPROXY=https://goproxy.cn,direct go get gopkg.in/yaml.v3
	go mod tidy

build:
	go build -o $(APP_NAME) $(MAIN_FILE)

install: build
	@echo "📥 Installing binary for $(OS) → $(BINARY_PATH)"
	@if [ "$(OS)" = "Windows_NT" ]; then \
		echo "⚠️ Windows detected. Please copy $(APP_NAME).exe manually to a directory in your PATH."; \
	else \
		install -m 755 $(APP_NAME) $(BINARY_PATH); \
		echo "✅ Installed to $(BINARY_PATH)"; \
	fi

run:
	go run $(MAIN_FILE)

ansible:
	go run $(MAIN_FILE) ansible all -m ping

playbook:
	go run $(MAIN_FILE) playbook $(PLAYBOOK)

vault:
	go run $(MAIN_FILE) vault

cmdb:
	go run $(MAIN_FILE) cmdb export --format json > cmdb-graph.json

plugin:
	go run $(MAIN_FILE) plugin run ./plugins/hello.wasm

clean:
	rm -f $(APP_NAME)

help:
	@echo "🧶 Xconfig CLI Usage"
	@echo ""
	@echo "make build                编译 xconfig 可执行文件"
	@echo "make run                  运行默认入口"
	@echo "make ansible              执行 ansible all -m ping"
	@echo "make playbook             执行默认 playbook 文件"
	@echo "make vault                加解密命令（占位）"
	@echo "make cmdb                 输出图数据库格式"
	@echo "make plugin               加载运行插件（WASM）"
	@echo "make init                 初始化依赖（go mod tidy）"
	@echo "make clean                清理构建产物"
